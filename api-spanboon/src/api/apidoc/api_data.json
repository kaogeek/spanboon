[  {    "type": "delete",    "url": "/api/auth/delete-user/:id",    "title": "Delete User",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>UserId</p>"          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"User is deleted successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/delete-user/:id"      }    ],    "error": {      "examples": [        {          "title": "updateUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "DeleteApiAuthDeleteUserId"  },  {    "type": "get",    "url": "/api/auth/logout",    "title": "Log Out API",    "group": "Authentication",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully logout\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/logout"      }    ],    "error": {      "examples": [        {          "title": "Logout error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "GetApiAuthLogout"  },  {    "type": "get",    "url": "/api/auth/userlist",    "title": "User List API",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "count",            "description": "<p>count in number or boolean</p>"          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get user list\",\n     \"data\":\"{}\"\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/userlist"      }    ],    "error": {      "examples": [        {          "title": "User Profile error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "GetApiAuthUserlist"  },  {    "type": "post",    "url": "/api/auth/create-user",    "title": "Create User API",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>userName</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User First Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User Last Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User Email-Id</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "userGroupId",            "description": "<p>User GroupId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"username\" : \"\",\n     \"password\" : \"\",\n     \"firstName\" : \"\",\n     \"lastName\" : \"\",\n     \"email\" : \"\",\n     \"userGroupId\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New User is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/create-user"      }    ],    "error": {      "examples": [        {          "title": "createUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PostApiAuthCreateUser"  },  {    "type": "post",    "url": "/api/auth/edit-profile",    "title": "Edit Profile API",    "group": "Authentication",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>User username</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "phoneNumber",            "description": "<p>User phoneNumber</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>User address</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>User avatar</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"username\" : \"\",\n     \"email\" : \"\",\n     \"phoneNumber\" : \"\",\n     \"address\" : \"\",\n     \"avatar\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully updated User.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/edit-profile"      }    ],    "error": {      "examples": [        {          "title": "User error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PostApiAuthEditProfile"  },  {    "type": "post",    "url": "/api/auth/forgot-password",    "title": "Forgot Password API",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"email\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Thank you. Your password send to your email\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/forgot-password"      }    ],    "error": {      "examples": [        {          "title": "User error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PostApiAuthForgotPassword"  },  {    "type": "post",    "url": "/api/auth/login",    "title": "Login",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>User Username</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User Password</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"username\" : \"\",\n     \"password\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"data\": \"{\n        \"token\":''\n     }\",\n     \"message\": \"Successfully login\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/login"      }    ],    "error": {      "examples": [        {          "title": "Login error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PostApiAuthLogin"  },  {    "type": "put",    "url": "/api/auth/change-password",    "title": "Change Password API",    "group": "Authentication",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "oldPassword",            "description": "<p>User oldPassword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "newPassword",            "description": "<p>User newPassword</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"oldPassword\" : \"\",\n     \"newPassword\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Password changed\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/change-password"      }    ],    "error": {      "examples": [        {          "title": "User error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PutApiAuthChangePassword"  },  {    "type": "put",    "url": "/api/auth/update-user/:id",    "title": "Update User API",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>userName</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User First Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User Last Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User Email-Id</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "userGroupId",            "description": "<p>User GroupId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"username\" : \"\",\n     \"password\" : \"\",\n     \"firstName\" : \"\",\n     \"lastName\" : \"\",\n     \"email\" : \"\",\n     \"userGroupId\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"User is updated successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/update-user/:id"      }    ],    "error": {      "examples": [        {          "title": "updateUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PutApiAuthUpdateUserId"  },  {    "type": "delete",    "url": "/api/delete-category/:id",    "title": "Delete ContentCategory API",    "group": "ContentCategory",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "categoryId",            "description": "<p>ContentCategory categoryId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"categoryId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted ContentCategory.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/delete-category/:id"      }    ],    "error": {      "examples": [        {          "title": "ContentCategory error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/ContentCategoryController.ts",    "groupTitle": "ContentCategory",    "name": "DeleteApiDeleteCategoryId"  },  {    "type": "get",    "url": "/api/category-list-intree",    "title": "ContentCategory List InTree API",    "group": "ContentCategory",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "sortOrder",            "description": "<p>sortOrder</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "count",            "description": "<p>count in number or boolean</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"successfully got the complete category list.\",\n     \"data\":\"{}\"\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/category-list-intree"      }    ],    "error": {      "examples": [        {          "title": "ContentCategory error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/ContentCategoryController.ts",    "groupTitle": "ContentCategory",    "name": "GetApiCategoryListIntree"  },  {    "type": "get",    "url": "/api/categorylist",    "title": "ContentCategory List API",    "group": "ContentCategory",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "sortOrder",            "description": "<p>sortOrder</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>status</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "count",            "description": "<p>count in number or boolean</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"successfully got the complete category list.\",\n     \"data\":\"{ }\"\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/categorylist"      }    ],    "error": {      "examples": [        {          "title": "ContentCategory error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/ContentCategoryController.ts",    "groupTitle": "ContentCategory",    "name": "GetApiCategorylist"  },  {    "type": "post",    "url": "/api/add-category",    "title": "Add ContentCategory API",    "group": "ContentCategory",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>ContentCategory name</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "parentInt",            "description": "<p>ContentCategory  parentInt</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "sortOrder",            "description": "<p>ContentCategory sortOrder</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagTitle",            "description": "<p>ContentCategory metaTagTitle</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagDescription",            "description": "<p>ContentCategory metaTagDescription</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagKeyword",            "description": "<p>ContentCategory metaTagKeyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>ContentCategory status 1-&gt; Active 0-&gt; inactive</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"parentInt\" : \"\",\n     \"sortOrder\" : \"\",\n     \"metaTagTitle\" : \"\",\n     \"metaTagDescription\" : \"\",\n     \"metaTagKeyword\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully created new ContentCategory.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/add-category"      }    ],    "error": {      "examples": [        {          "title": "ContentCategory error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/ContentCategoryController.ts",    "groupTitle": "ContentCategory",    "name": "PostApiAddCategory"  },  {    "type": "put",    "url": "/api/update-category/:id",    "title": "Update ContentCategory API",    "group": "ContentCategory",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "categoryId",            "description": "<p>ContentCategory categoryId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>ContentCategory name</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "parentInt",            "description": "<p>ContentCategory  parentInt</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "sortOrder",            "description": "<p>ContentCategory sortOrder</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagTitle",            "description": "<p>ContentCategory metaTagTitle</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagDescription",            "description": "<p>ContentCategory metaTagDescription</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagKeyword",            "description": "<p>ContentCategory metaTagKeyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>ContentCategory status 1-&gt; Active 0-&gt; inactive</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"categoryId\" : \"\",\n     \"name\" : \"\",\n     \"parentInt\" : \"\",\n     \"sortOrder\" : \"\",\n     \"metaTagTitle\" : \"\",\n     \"metaTagDescription\" : \"\",\n     \"metaTagKeyword\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully updated ContentCategory.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/update-category/:id"      }    ],    "error": {      "examples": [        {          "title": "ContentCategory error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/ContentCategoryController.ts",    "groupTitle": "ContentCategory",    "name": "PutApiUpdateCategoryId"  },  {    "type": "post",    "url": "/api/content/add-content",    "title": "Add Content API",    "group": "Contents",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>content</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagTitle",            "description": "<p>metaTagTitle</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagDescription",            "description": "<p>metaTagDescription</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagKeyword",            "description": "<p>metaTagKeyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "active",            "description": "<p>active</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"metaTagTitle\" : \"\",\n     \"metaTagDescription\" : \"\",\n     \"metaTagKeyword\" : \"\",\n     \"active\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New content is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/content/add-content"      }    ],    "error": {      "examples": [        {          "title": "Contents error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/ContentsController.ts",    "groupTitle": "Contents",    "name": "PostApiContentAddContent"  },  {    "type": "delete",    "url": "/api/email-template/delete-email-template/:id",    "title": "Delete EmailTemplate API",    "group": "EmailTemplate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"emailTemplateId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted emailTemplate.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/email-template/delete-email-template/:id"      }    ],    "error": {      "examples": [        {          "title": "EmailTemplate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/EmailTemplateController.ts",    "groupTitle": "EmailTemplate",    "name": "DeleteApiEmailTemplateDeleteEmailTemplateId"  },  {    "type": "get",    "url": "/api/email-template/email-templatelist",    "title": "EmailTemplate List API",    "group": "EmailTemplate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "count",            "description": "<p>count should be number or boolean</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get emailTemplate list\",\n     \"data\":{\n     \"id\" : \"\",\n     \"title\" : \"\",\n     \"subject\" : \"\",\n     \"content\" : \"\",\n     \"status\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/email-template/email-templatelist"      }    ],    "error": {      "examples": [        {          "title": "EmailTemplate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/EmailTemplateController.ts",    "groupTitle": "EmailTemplate",    "name": "GetApiEmailTemplateEmailTemplatelist"  },  {    "type": "post",    "url": "/api/email-template/add-email-template",    "title": "Add Email Template API",    "group": "EmailTemplate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>EmailTemplate title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>EmailTemplate subject</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>EmailTemplate content</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>EmailTemplate status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"title\" : \"\",\n     \"subject\" : \"\",\n     \"content\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully created new emailTemplate.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/email-template/add-email-template"      }    ],    "error": {      "examples": [        {          "title": "EmailTemplate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/EmailTemplateController.ts",    "groupTitle": "EmailTemplate",    "name": "PostApiEmailTemplateAddEmailTemplate"  },  {    "type": "put",    "url": "/api/email-template/update-email-template/:id",    "title": "Update EmailTemplate API",    "group": "EmailTemplate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>EmailTemplate title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>EmailTemplate subject</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>EmailTemplate content</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>EmailTemplate status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"title\" : \"\",\n     \"subject\" : \"\",\n     \"content\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully updated emailTemplate.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/email-template/update-email-template/:id"      }    ],    "error": {      "examples": [        {          "title": "emailTemplate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/EmailTemplateController.ts",    "groupTitle": "EmailTemplate",    "name": "PutApiEmailTemplateUpdateEmailTemplateId"  },  {    "type": "get",    "url": "/api/page/pagelist",    "title": "pagecontent List API",    "group": "PageContent",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get page list\",\n   \"data\":\"{}\"\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/page/pagelist"      }    ],    "error": {      "examples": [        {          "title": "role error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageContentController.ts",    "groupTitle": "PageContent",    "name": "GetApiPagePagelist"  },  {    "type": "delete",    "url": "/api/pageuser/delete-customer/:id",    "title": "Delete PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"customerId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted customer.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/delete-customer/:id"      }    ],    "error": {      "examples": [        {          "title": "PageUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "DeleteApiPageuserDeleteCustomerId"  },  {    "type": "get",    "url": "/api/pageuser/customerlist",    "title": "PageUser List API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>search by name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>search bu email</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>0-&gt;inactive 1-&gt; active</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "customerGroup",            "description": "<p>search by customerGroup</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>search by date</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "count",            "description": "<p>count should be number or boolean</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get customer list\",\n     \"data\":{\n     \"customerGroupId\" : \"\",\n     \"username\" : \"\",\n     \"email\" : \"\",\n     \"mobileNUmber\" : \"\",\n     \"password\" : \"\",\n     \"avatar\" : \"\",\n     \"avatarPath\" : \"\",\n     \"status\" : \"\",\n     \"safe\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/customerlist"      }    ],    "error": {      "examples": [        {          "title": "customer error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserCustomerlist"  },  {    "type": "get",    "url": "/api/pageuser/pageuser-details/:id",    "title": "PageUser Details API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get customer Details\",\n\"data\":{\n\"customerGroupId\" : \"\",\n\"username\" : \"\",\n\"email\" : \"\",\n\"mobileNumber\" : \"\",\n\"password\" : \"\",\n\"avatar\" : \"\",\n\"avatarPath\" : \"\",\n\"newsletter\" : \"\",\n\"status\" : \"\",\n\"safe\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/pageuser-details/:id"      }    ],    "error": {      "examples": [        {          "title": "customer error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserPageuserDetailsId"  },  {    "type": "get",    "url": "/api/pageuser/pageuser-excel-list",    "title": "PageUser Excel",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "customerId",            "description": "<p>customerId</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully download the PageUser Excel List..!!\",\n     \"status\": \"1\",\n     \"data\": {},\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/pageuser-excel-list"      }    ],    "error": {      "examples": [        {          "title": "PageUser Excel List error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserPageuserExcelList"  },  {    "type": "get",    "url": "/api/pageuser/recent-customerlist",    "title": "Recent PageUser List API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get customer list\",\n     \"data\":{\n     \"location\" : \"\",\n     \"name\" : \"\",\n     \"created date\" : \"\",\n     \"isActive\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/recent-customerlist"      }    ],    "error": {      "examples": [        {          "title": "customer error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserRecentCustomerlist"  },  {    "type": "get",    "url": "/api/pageuser/today-customercount",    "title": "Today PageUser Count API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get Today customer count\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/today-customercount"      }    ],    "error": {      "examples": [        {          "title": "order error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserTodayCustomercount"  },  {    "type": "post",    "url": "/api/pageuser/add-customer",    "title": "Add PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "customerGroupId",            "description": "<p>PageUser customerGroupId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>PageUser username</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>PageUser email</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "mobileNumber",            "description": "<p>PageUser mobileNumber</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>PageUser password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "confirmPassword",            "description": "<p>PageUser confirmPassword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>PageUser avatar</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "mailStatus",            "description": "<p>PageUser mailStatus should be 1 or 0</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>PageUser status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"customerGroupId\" : \"\",\n     \"userName\" : \"\",\n     \"email\" : \"\",\n     \"mobileNumber\" : \"\",\n     \"password\" : \"\",\n     \"confirmPassword\" : \"\",\n     \"avatar\" : \"\",\n     \"mailStatus\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"PageUser Created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/add-customer"      }    ],    "error": {      "examples": [        {          "title": "PageUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserAddCustomer"  },  {    "type": "post",    "url": "/api/product/delete-customer",    "title": "Delete Multiple PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "customerId",            "description": "<p>customerId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n\"customerId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted customer.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/delete-customer"      }    ],    "error": {      "examples": [        {          "title": "customerDelete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiProductDeleteCustomer"  },  {    "type": "put",    "url": "/api/pageuser/update-customer/:id",    "title": "Update PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "customerGroupId",            "description": "<p>PageUser customerGroupId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>PageUser username</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>PageUser email</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "mobileNumber",            "description": "<p>PageUser mobileNumber</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>PageUser password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "confirmPassword",            "description": "<p>PageUser confirmPassword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>PageUser avatar</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "mailStatus",            "description": "<p>PageUser mailStatus should be 1 or 0</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>PageUser status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"customerGroupId\" : \"\",\n     \"userName\" : \"\",\n     \"email\" : \"\",\n     \"mobileNumber\" : \"\",\n     \"password\" : \"\",\n     \"confirmPassword\" : \"\",\n     \"avatar\" : \"\",\n     \"mailStatus\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \" PageUser is updated successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/update-customer/:id"      }    ],    "error": {      "examples": [        {          "title": "updateCustomer error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PutApiPageuserUpdateCustomerId"  },  {    "type": "get",    "url": "/api/media/image-resize",    "title": "Resize Image On The Fly",    "group": "Resize_Image",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "width",            "description": "<p>width</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "height",            "description": "<p>height</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>path</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"Successfully resize image\",\n  \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/image-resize"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n    \"message\": \"Unable to resize the image\",\n    \"status\": 0,\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/MediaController.ts",    "groupTitle": "Resize_Image",    "name": "GetApiMediaImageResize"  },  {    "type": "delete",    "url": "/api/role/delete-role/:id",    "title": "Delete Role API",    "group": "Role",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "groupId",            "description": "<p>groupId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"roleId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted Role.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/role/delete-role/:id"      }    ],    "error": {      "examples": [        {          "title": "Role error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/RoleController.ts",    "groupTitle": "Role",    "name": "DeleteApiRoleDeleteRoleId"  },  {    "type": "get",    "url": "/api/role/rolelist",    "title": "Role List API",    "group": "Role",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>status</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "count",            "description": "<p>count in number or boolean</p>"          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get role list\",\n   \"data\":\"{}\"\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/role/rolelist"      }    ],    "error": {      "examples": [        {          "title": "role error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/RoleController.ts",    "groupTitle": "Role",    "name": "GetApiRoleRolelist"  },  {    "type": "post",    "url": "/api/role/create-role",    "title": "Create Role API",    "group": "Role",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>roleName</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Role is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/role/create-role"      }    ],    "error": {      "examples": [        {          "title": "createRole error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/RoleController.ts",    "groupTitle": "Role",    "name": "PostApiRoleCreateRole"  },  {    "type": "put",    "url": "/api/role/update-role/:id",    "title": "Update Role API",    "group": "Role",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>roleName</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"slug\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \" Role is updated successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/role/update-role/:id"      }    ],    "error": {      "examples": [        {          "title": "updateRole error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/RoleController.ts",    "groupTitle": "Role",    "name": "PutApiRoleUpdateRoleId"  },  {    "type": "get",    "url": "/api/room/roomlist",    "title": "room List API",    "group": "Room",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get room list\",\n   \"data\":\"{}\"\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/room/roomlist"      }    ],    "error": {      "examples": [        {          "title": "role error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/RoomController.ts",    "groupTitle": "Room",    "name": "GetApiRoomRoomlist"  },  {    "type": "get",    "url": "/api/settings/get-settings",    "title": "Get Setting API",    "group": "Settings",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get settings\",\n     \"data\":\"{}\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/settings/get-settings"      }    ],    "error": {      "examples": [        {          "title": "getSettings error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/SettingController.ts",    "groupTitle": "Settings",    "name": "GetApiSettingsGetSettings"  },  {    "type": "post",    "url": "/api/settings/create-settings",    "title": "Create Settings API",    "group": "Settings",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>store url</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagTitle",            "description": "<p>metaTagTitle</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagDescription",            "description": "<p>metaTagDescription</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagKeywords",            "description": "<p>metaTagKeywords</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeName",            "description": "<p>storeName</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeOwner",            "description": "<p>storeOwner</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeAddress",            "description": "<p>storeAddress</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "countryId",            "description": "<p>countryId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "zoneId",            "description": "<p>zoneId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeEmail",            "description": "<p>storeEmail</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeTelephone",            "description": "<p>storeTelephone</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeFax",            "description": "<p>storeFax</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeLogo",            "description": "<p>storeLog</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "maintenanceMode",            "description": "<p>maintenanceMode</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeImage",            "description": "<p>storeImage</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "invoicePrefix",            "description": "<p>invoicePrefix</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "orderStatus",            "description": "<p>orderStatus</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "categoryProductCount",            "description": "<p>productCount should be 0 or 1</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "itemsPerPage",            "description": "<p>ItemsPerPage</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "facebook",            "description": "<p>facebook</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "twitter",            "description": "<p>twitter</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "instagram",            "description": "<p>instagram</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "google",            "description": "<p>google</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"url\" : \"\",\n     \"metaTagTitle\" : \"\",\n     \"metaTagDescription\" : \"\",\n     \"metaTagKeywords\" : \"\",\n     \"storeName\" : \"\",\n     \"storeOwner\" : \"\",\n     \"storeAddress\" : \"\",\n     \"countryId\" : \"\",\n     \"zoneId\" : \"\",\n     \"storeEmail\" : \"\",\n     \"storeTelephone\" : \"\",\n     \"storeFax\" : \"\",\n     \"storeLogo\" : \"\",\n     \"maintenanceMode\" : \"\",\n     \"storeImage\" : \"\",\n     \"invoicePrefix\" : \"\",\n     \"orderStatus\" : \"\",\n     \"categoryProductCount\" : \"\",\n     \"itemsPerPage\" : \"\",\n     \"google\" : \"\",\n     \"instagram\" : \"\",\n     \"facebook\" : \"\",\n     \"twitter\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully created setting.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/settings/create-settings"      }    ],    "error": {      "examples": [        {          "title": "addSettings error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/SettingController.ts",    "groupTitle": "Settings",    "name": "PostApiSettingsCreateSettings"  },  {    "type": "get",    "url": "/api/pageuser/get-profile",    "title": "Get Profile API",    "group": "Store",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Get the Profile..!\",\n     \"status\": \"1\"\n      \"data\":{}\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/get-profile"      }    ],    "error": {      "examples": [        {          "title": "Get Profile error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/PageUserController.ts",    "groupTitle": "Store",    "name": "GetApiPageuserGetProfile"  },  {    "type": "get",    "url": "/api/pageuser/login-log-list",    "title": "Login Log list API",    "group": "Store",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get login log list\",\n     \"data\":{\n     \"id\"\n     \"userId\"\n     \"emailId\"\n     \"firstName\"\n     \"ipAddress\"\n     \"createdDate\"\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/login-log-list"      }    ],    "error": {      "examples": [        {          "title": "Front error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/PageUserController.ts",    "groupTitle": "Store",    "name": "GetApiPageuserLoginLogList"  },  {    "type": "post",    "url": "/api/pageuser/change-password",    "title": "Change Password API",    "group": "Store",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "oldPassword",            "description": "<p>Old Password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "newPassword",            "description": "<p>New Password</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "     \"oldPassword\" : \"\",\n     \"newPassword\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Your password changed successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/change-password"      }    ],    "error": {      "examples": [        {          "title": "Change Password error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/PageUserController.ts",    "groupTitle": "Store",    "name": "PostApiPageuserChangePassword"  },  {    "type": "post",    "url": "/api/pageuser/edit-profile",    "title": "Edit Profile API",    "group": "Store",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>First Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Last Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "phoneNumber",            "description": "<p>User Phone Number (Optional)</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "image",            "description": "<p>PageUser Image</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"firstName\" : \"\",\n     \"lastName\" : \"\",\n     \"password\" \"\",\n     \"emailId\" : \"\",\n     \"phoneNumber\" : \"\",\n     \"image\": \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully updated your profile.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/edit-profile"      }    ],    "error": {      "examples": [        {          "title": "Register error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/PageUserController.ts",    "groupTitle": "Store",    "name": "PostApiPageuserEditProfile"  },  {    "type": "post",    "url": "/api/pageuser/forgot-password",    "title": "Forgot Password API",    "group": "Store",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"emailId\" : \"\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Thank you,Your password send to your mail id please check your email.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/forgot-password"      }    ],    "error": {      "examples": [        {          "title": "Forgot Password error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/PageUserController.ts",    "groupTitle": "Store",    "name": "PostApiPageuserForgotPassword"  },  {    "type": "post",    "url": "/api/pageuser/login",    "title": "login API",    "group": "Store",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User Password</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"emailId\" : \"\",\n     \"password\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"data\": \"{\n        \"token\":''\n     }\",\n     \"message\": \"Successfully login\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/login"      }    ],    "error": {      "examples": [        {          "title": "Login error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/PageUserController.ts",    "groupTitle": "Store",    "name": "PostApiPageuserLogin"  },  {    "type": "post",    "url": "/api/pageuser/register",    "title": "register API",    "group": "Store",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User Password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "confirmPassword",            "description": "<p>Confirm Password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "phoneNumber",            "description": "<p>User Phone Number (Optional)</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"password\" : \"\",\n     \"confirmPassword\" : \"\",\n     \"emailId\" : \"\",\n     \"phoneNumber\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Thank you for registering with us and please check your email\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/register"      }    ],    "error": {      "examples": [        {          "title": "Register error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/PageUserController.ts",    "groupTitle": "Store",    "name": "PostApiPageuserRegister"  },  {    "type": "get",    "url": "/api/list/category-list",    "title": "Category List Tree API",    "group": "Store_List",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>Limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>Offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "sortOrder",            "description": "<p>sortOrder</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "count",            "description": "<p>count in number or boolean</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"limit\" : \"\",\n     \"offset\": \"\",\n     \"keyorder\": \"\",\n     \"sortOrder\": \"\",\n     \"count\": \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"category list shown successfully..!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/category-list"      }    ],    "error": {      "examples": [        {          "title": "Category List error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListCategoryList"  },  {    "type": "get",    "url": "/api/list/custom-product-list",    "title": "Custom Product List API",    "group": "Store_List",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "manufacturerId",            "description": "<p>manufacturerId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "categoryId",            "description": "<p>categoryId</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceFrom",            "description": "<p>price from you want to list</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceTo",            "description": "<p>price to you want to list</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "price",            "description": "<p>ASC OR DESC</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "condition",            "description": "<p>1-&gt;new 2-&gt;used</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get product list\",\n     \"data\":\"{}\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/custom-product-list"      }    ],    "error": {      "examples": [        {          "title": "productList error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListCustomProductList"  },  {    "type": "get",    "url": "/api/list/product-count",    "title": "Product Count API",    "group": "Store_List",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword for search</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "manufacturerId",            "description": "<p>manufacturerId</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "categoryId",            "description": "<p>categoryId</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceFrom",            "description": "<p>price from you want to list</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceTo",            "description": "<p>price to you want to list</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get Product Count\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/product-count"      }    ],    "error": {      "examples": [        {          "title": "product count error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListProductCount"  },  {    "type": "get",    "url": "/api/list/productlist",    "title": "Product List API",    "group": "Store_List",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "manufacturerId",            "description": "<p>manufacturerId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "categoryId",            "description": "<p>categoryId</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceFrom",            "description": "<p>price from you want to list</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceTo",            "description": "<p>price to you want to list</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>orderBy 0-&gt;desc 1-&gt;asc</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "condition",            "description": "<p>1-&gt;new 2-&gt;used</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "count",            "description": "<p>count in boolean or number</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get product list\",\n     \"data\":\"{}\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/productlist"      }    ],    "error": {      "examples": [        {          "title": "productList error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListProductlist"  },  {    "type": "get",    "url": "/api/list/specific-category-list",    "title": "Specific Category List",    "group": "Store_List",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "categoryId",            "description": "<p>categoryId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"parentInt\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Category listed successfully..!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/specific-category-list"      }    ],    "error": {      "examples": [        {          "title": "Category List error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListSpecificCategoryList"  },  {    "type": "post",    "url": "/api/list/contact-us",    "title": "Contact Us API",    "group": "Store_List",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "phoneNumber",            "description": "<p>Phone Number</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"email\" : \"\",\n     \"phoneNumber\" : \"\",\n     \"message\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Your mail send to admin..!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/contact-us"      }    ],    "error": {      "examples": [        {          "title": "Contact error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "PostApiListContactUs"  },  {    "type": "get",    "url": "/api/tag/taglist",    "title": "tag List API",    "group": "Tag",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get tag list\",\n   \"data\":\"{}\"\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/tag/taglist"      }    ],    "error": {      "examples": [        {          "title": "role error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/TagController.ts",    "groupTitle": "Tag",    "name": "GetApiTagTaglist"  },  {    "type": "get",    "url": "/api/media/bucket-object-list",    "title": "bucket-object-list",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>list limit</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "folderName",            "description": "<p>Specific Folder Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"limit\" : \"\",\n     \"folderName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get bucket object list!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/bucket-object-list"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/MediaController.ts",    "groupTitle": "media",    "name": "GetApiMediaBucketObjectList"  },  {    "type": "get",    "url": "/api/media/delete-file",    "title": "delete file API",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "fileName",            "description": "<p>File Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"fileName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Deleted file!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/delete-file"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/MediaController.ts",    "groupTitle": "media",    "name": "GetApiMediaDeleteFile"  },  {    "type": "get",    "url": "/api/media/search-folder",    "title": "search Folder API",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "folderName",            "description": "<p>folderName</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"FolderName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get Folder!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/search-folder"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/MediaController.ts",    "groupTitle": "media",    "name": "GetApiMediaSearchFolder"  },  {    "type": "post",    "url": "/api/media/create-folder",    "title": "Create Folder",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "folderName",            "description": "<p>Specific Folder Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"folderName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Created folder!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/create-folder"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/MediaController.ts",    "groupTitle": "media",    "name": "PostApiMediaCreateFolder"  },  {    "type": "post",    "url": "/api/media/delete-folder",    "title": "delete folder API",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "folderName",            "description": "<p>Specific Folder Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"folderName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Deleted folder!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/delete-folder"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/MediaController.ts",    "groupTitle": "media",    "name": "PostApiMediaDeleteFolder"  },  {    "type": "post",    "url": "/api/media/upload-file",    "title": "Upload File",    "group": "media",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "image",            "description": "<p>image</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>Directory Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n  \"file\":\"\",\n  \"path\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"Successfully upload file\",\n  \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/upload-file"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n    \"message\": \"Unable to upload file\",\n    \"status\": 0,\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "controllers/MediaController.ts",    "groupTitle": "media",    "name": "PostApiMediaUploadFile"  }]
